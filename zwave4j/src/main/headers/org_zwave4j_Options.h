/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_zwave4j_Options */

#ifndef _Included_org_zwave4j_Options
#define _Included_org_zwave4j_Options
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_zwave4j_Options
 * Method:    createNativeOptions
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_zwave4j_Options_createNativeOptions
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     org_zwave4j_Options
 * Method:    destroyNativeOptions
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_zwave4j_Options_destroyNativeOptions
  (JNIEnv *, jclass);

/*
 * Class:     org_zwave4j_Options
 * Method:    lock
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_zwave4j_Options_lock
  (JNIEnv *, jobject);

/*
 * Class:     org_zwave4j_Options
 * Method:    addOptionBool
 * Signature: (Ljava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_org_zwave4j_Options_addOptionBool
  (JNIEnv *, jobject, jstring, jboolean);

/*
 * Class:     org_zwave4j_Options
 * Method:    addOptionInt
 * Signature: (Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_zwave4j_Options_addOptionInt
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     org_zwave4j_Options
 * Method:    addOptionString
 * Signature: (Ljava/lang/String;Ljava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_org_zwave4j_Options_addOptionString
  (JNIEnv *, jobject, jstring, jstring, jboolean);

/*
 * Class:     org_zwave4j_Options
 * Method:    getOptionAsBool
 * Signature: (Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicReference;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_zwave4j_Options_getOptionAsBool
  (JNIEnv *, jobject, jstring, jobject);

/*
 * Class:     org_zwave4j_Options
 * Method:    getOptionAsInt
 * Signature: (Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicReference;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_zwave4j_Options_getOptionAsInt
  (JNIEnv *, jobject, jstring, jobject);

/*
 * Class:     org_zwave4j_Options
 * Method:    getOptionAsString
 * Signature: (Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicReference;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_zwave4j_Options_getOptionAsString
  (JNIEnv *, jobject, jstring, jobject);

/*
 * Class:     org_zwave4j_Options
 * Method:    getOptionType
 * Signature: (Ljava/lang/String;)Lorg/zwave4j/OptionType;
 */
JNIEXPORT jobject JNICALL Java_org_zwave4j_Options_getOptionType
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_zwave4j_Options
 * Method:    areLocked
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_zwave4j_Options_areLocked
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
